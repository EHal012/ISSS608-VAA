{
  "hash": "ce56c89a4413b604b746e8b64b956846",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Ex02\"\ndescription: \"Take-home Ex02\" \ndate: \"May 16, 2025\" \ndate-modified: \"May 16, 2025\" \nformat: docx\nauthor: \"YUAN Yihao\" \neditor: visual \nexecute: \n  eval: true \n  echo: true \n  warning: false \n  freeze: true \n---\n\n\n\n# VAST Challenge: Mini-case 1\n\nBackground Sailor Shift, a global superstar from Oceanus, began her career in \"Oceanus Folk\" music before achieving worldwide fame in 2028 with a chart-topping viral single. Passionate about promoting Oceanus Folk and supporting emerging artists, she frequently collaborates with established musicians. She was briefly part of the all-female band Ivy Echoes (2023–2026), whose members later pursued solo careers, further spreading the genre’s influence. In 2040, journalist Silas Reed aims to analyze Sailor’s rise and Oceanus Folk’s impact using a knowledge graph, requiring insightful visualizations to uncover her legacy and the genre’s evolution.\n\n# Project Objectives\n\n1.  Explore and understand the profile of Sailor Shift’s career\n\n2.  Illustrate how the influence of Oceanus Folk has spread through the musical world.\n\n3.  Develop a profile of what it means to be a rising star in the music industry\n\n# Install Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npacman::p_load(tidyverse, jsonlite, SmartEDA, tidygraph, ggraph, dplyr)\n```\n:::\n\n\n\n# Import Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nkg <- fromJSON(\"data/MC1_release/MC1_graph.json\")\n```\n:::\n\n\n\n# Data Wrangling\n\n## Inspect structure\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nstr(kg, max.level = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame':\t17412 obs. of  10 variables:\n $ links     :'data.frame':\t37857 obs. of  4 variables:\n```\n\n\n:::\n:::\n\n\n\n## Extracting the edges and nodes tables\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nnodes_tbl <- as_tibble(kg$nodes)\nedges_tbl <- as_tibble(kg$links) \n```\n:::\n\n\n\n## Initial EDA\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = edges_tbl,\n       aes(y = `Edge Type`)) +\n       geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-5-1.png)\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(data = nodes_tbl,\n       aes(y = `Node Type`)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n\n## Graph Preparation\n\n### Step 1 : Mapping from node id to row index\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nid_map <- tibble(id = nodes_tbl$id,\n                 index = seq_len(\n                   nrow(nodes_tbl)))\n```\n:::\n\n\n\nThis ensures each id from node list is mapped to the correct row number\n\n### Step 2: Map source and target IDS to row indices\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nedges_tbl <- edges_tbl %>%\n  left_join(id_map, by = c(\"source\" = \"id\")) %>%\n  rename(from = index) %>%\n  left_join(id_map, by = c(\"target\" = \"id\")) %>%\n  rename(to = index)\n```\n:::\n\n\n\n### Step 3: Filter out any unmatched (invalid) edges\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nedges_tbl <- edges_tbl %>%\n  filter(!is.na(from), !is.na(to))\n```\n:::\n\n\n\n### Step 4: Creating the graph\n\nLastly, `tbl_graph()` is used to create tiidygraph's graph object by using the code chunk below\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngraph <- tbl_graph(nodes = nodes_tbl, \n                   edges = edges_tbl, \n                   directed = kg$directed)\n```\n:::\n\n\n\n### Set the seed\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\n```\n:::\n\n\n\n# Solving the tasks\n\n## Task 1 \n\n## a. Who has she been most influenced by over time?\n\n### Find works Sailor Shift involved in and What are these works reference to\n\n### Select Edge Type: \"InStyleOf\", \"InterpolatesFrom\", \"CoverOf\", \"DirectlySamples\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsailor_id <- nodes_tbl %>%\n  filter(name == \"Sailor Shift\") %>%\n  pull(id)\nsailor_works <- edges_tbl %>%\n  filter(source == sailor_id, `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %>%\n  pull(target)\ninfluence_edges <- edges_tbl %>%\n  filter(source %in% sailor_works,\n         `Edge Type` %in% c(\"InStyleOf\", \"InterpolatesFrom\", \"CoverOf\", \"DirectlySamples\"))\ninfluencing_creators <- edges_tbl %>%\n  filter(`Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\"),\n         target %in% influence_edges$target) %>%\n  pull(source) %>%\n  unique()\n```\n:::\n\n\n\n### Rank by frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ninfluencer_summary <- edges_tbl %>%\n  filter(`Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\"),\n         target %in% influence_edges$target) %>%\n  group_by(source) %>%\n  summarise(times = n()) %>%\n  left_join(nodes_tbl, by = c(\"source\" = \"id\")) %>%\n  arrange(desc(times)) %>%\n  select(name, `Node Type`, times)\n```\n:::\n\n\n\n### Visulisation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nggplot(influencer_summary[1:10, ], aes(x = reorder(name, times), y = times)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Top Influencers of Sailor Shift\",\n       x = \"Artist\", y = \"Number of Influenced Works\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-14-1.png)\n:::\n:::\n\n\n\n### Find other artists collaborate with Sailor\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsailor_id <- nodes_tbl %>%\n  filter(name == \"Sailor Shift\") %>%\n  pull(id)\nsailor_edges <- edges_tbl %>%\n  filter(source == sailor_id,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"MemberOf\"))\n\n# Works with sailor（songs, albums, groups）\nsailor_works <- sailor_edges$target\nco_edges <- edges_tbl %>%\n  filter(target %in% sailor_works,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\", \"MemberOf\"),\n         source != sailor_id)\n```\n:::\n\n\n\n### Get the frequency and names\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncollaborators <- co_edges %>%\n  count(source, sort = TRUE) %>%\n  left_join(nodes_tbl, by = c(\"source\" = \"id\")) %>%\n  select(name, n) %>%\n  rename(times = n)\n```\n:::\n\n\n\n### Visulise the frequency and rank Top 10 collaborators\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nggplot(collaborators[1:10, ], aes(x = reorder(name, times), y = times)) +\n  geom_col(fill = \"darkorange\") +\n  coord_flip() +\n  labs(title = \"Top Collaborators of Sailor Shift\",\n       x = \"Artist\", y = \"Number of Collaborations\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-17-1.png)\n:::\n:::\n\n\n\n## b. How has she influenced collaborators of the broader Oceanus Folk community?\n\nSeparate the question:\n\nStep 1: Find works Sailor involved in\n\nStep 2: Find who are influenced by Sailor\n\nStep 3: Count the frequency and see who are most influenced\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsailor_id <- nodes_tbl %>% filter(name == \"Sailor Shift\") %>% pull(id)\nsailor_works <- edges_tbl %>%\n  filter(source == sailor_id,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %>%\n  pull(target)\ndownstream_edges <- edges_tbl %>%\n  filter(`Edge Type` %in% c(\"InStyleOf\", \"InterpolatesFrom\", \"CoverOf\", \"DirectlySamples\"),\n         target %in% sailor_works)  \ninfluenced_creators <- edges_tbl %>%\n  filter(`Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\"),\n         target %in% downstream_edges$source)  \ninfluenced_artists <- influenced_creators %>%\n  left_join(nodes_tbl, by = c(\"source\" = \"id\")) %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\") | str_detect(tolower(name), \"oceanus\"))  #\nlibrary(dplyr)\ntop_influenced <- influenced_artists %>%\n  count(name, sort = TRUE)\n```\n:::\n\n\n\n### Create the graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsub_nodes_ids <- unique(c(\n  sailor_id,\n  sailor_works,\n  downstream_edges$source,\n  influenced_creators$source\n))\n\n\nsub_nodes <- nodes_tbl %>%\n  filter(id %in% sub_nodes_ids) %>%\n  mutate(index = row_number())  \n\nid_map <- sub_nodes %>% select(id, index)\n\nsub_edges <- edges_tbl %>%\n  filter(source %in% sub_nodes_ids, target %in% sub_nodes_ids) %>%\n  left_join(id_map, by = c(\"source\" = \"id\")) %>%\n  rename(temp_from = index) %>%\n  left_join(id_map, by = c(\"target\" = \"id\")) %>%\n  rename(temp_to = index) %>%\n  filter(!is.na(temp_from), !is.na(temp_to)) %>%\n  transmute(from = temp_from, to = temp_to, `Edge Type`)\n\ninfluence_graph <- tbl_graph(nodes = sub_nodes, edges = sub_edges, directed = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggraph)\n\nggraph(influence_graph, layout = \"fr\") +\n  geom_edge_link(arrow = arrow(length = unit(2, 'mm')), alpha = 0.5) +\n  geom_node_point(aes(color = ifelse(name == \"Sailor Shift\", \"Sailor\", \"Other\")), size = 4) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 3) +\n  scale_color_manual(values = c(\"Sailor\" = \"tomato\", \"Other\" = \"steelblue\")) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-20-1.png)\n:::\n:::\n\n\n\n## Task 2: Develop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_nodes <- nodes_tbl %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\"))\n\noceanus_ids <- oceanus_nodes$id\nedge_types_influence <- c(\"InStyleOf\", \"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \"DirectlySamples\")\ninfluence_edges <- edges_tbl %>%\n  filter(source %in% oceanus_ids, `Edge Type` %in% edge_types_influence)\ninfluenced_nodes <- nodes_tbl %>%\n  filter(id %in% influence_edges$target)\ninfluenced_summary <- influenced_nodes %>%\n  count(genre, sort = TRUE)\nsub_nodes <- nodes_tbl %>%\n  filter(id %in% unique(c(influence_edges$source, influence_edges$target))) %>%\n  mutate(index = row_number())\n\n\nid_map <- sub_nodes %>% select(id, index)\n\n\nsub_edges <- influence_edges %>%\n  left_join(id_map, by = c(\"source\" = \"id\")) %>%\n  rename(temp_from = index) %>%\n  left_join(id_map, by = c(\"target\" = \"id\")) %>%\n  rename(temp_to = index) %>%\n  filter(!is.na(temp_from), !is.na(temp_to)) %>%\n  transmute(from = temp_from, to = temp_to, `Edge Type`)\n```\n:::\n\n\n\n### Create Interactive graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(visNetwork)\n\nnodes_vn <- sub_nodes %>%\n  mutate(id = index,\n         label = name,\n         group = genre,\n         title = paste0(\"<b>\", name, \"</b><br>Type: \", `Node Type`, \"<br>Genre: \", genre)) %>%\n  select(id, label, group, title)\nedges_vn <- sub_edges %>%\n  mutate(title = `Edge Type`) %>%\n  select(from, to, title)\n\nvisNetwork(nodes_vn, edges_vn, height = \"600px\", width = \"100%\") %>%\n  visEdges(arrows = \"to\") %>%\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%\n  visLegend() %>%\n  visLayout(randomSeed = 42)\n```\n:::\n\n\n\n## a. Was this influence intermittent or did it have a gradual rise?\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_nodes <- nodes_tbl %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\"))\n\noceanus_ids <- oceanus_nodes$id\nedge_types_influence <- c(\"InStyleOf\", \"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \"DirectlySamples\")\n\ninfluenced_edges <- edges_tbl %>%\n  filter(source %in% oceanus_ids,\n         `Edge Type` %in% edge_types_influence)\ninfluenced_targets <- nodes_tbl %>%\n  filter(id %in% influenced_edges$target) %>%\n  filter(!is.na(release_date) | !is.na(written_date)) %>%\n  mutate(year = as.integer(substr(coalesce(release_date, written_date), 1, 4))) %>%\n  filter(!is.na(year))\ninfluence_yearly <- influenced_targets %>%\n  count(year) %>%\n  arrange(year)\nlibrary(ggplot2)\n\nggplot(influence_yearly, aes(x = year, y = n)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  geom_point(color = \"tomato\", size = 2) +\n  labs(title = \"Oceanus Folk Influence Over Time\",\n       x = \"Year\", y = \"Number of Influenced Works\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-23-1.png)\n:::\n:::\n\n\n\n## b. What genres and top artists have been most influenced by Oceanus Folk?\n\n### Find Oceanus Folk Node and filter\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_nodes <- nodes_tbl %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\"))\n\noceanus_ids <- oceanus_nodes$id\nedge_types_influence <- c(\"InStyleOf\", \"LyricalReferenceTo\", \"CoverOf\", \"InterpolatesFrom\", \"DirectlySamples\")\n\ninfluence_edges <- edges_tbl %>%\n  filter(source %in% oceanus_ids,\n         `Edge Type` %in% edge_types_influence)\n```\n:::\n\n\n\n### Find influenced object\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ninfluenced_nodes <- nodes_tbl %>%\n  filter(id %in% influence_edges$target)\n```\n:::\n\n\n\n### Count frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntop_genres <- influenced_nodes %>%\n  filter(!is.na(genre)) %>%\n  count(genre, sort = TRUE)\ntop_artists <- influenced_nodes %>%\n  filter(`Node Type` == \"Person\") %>%\n  count(name, sort = TRUE)\n```\n:::\n\n\n\n### Visualisation Top 10 Influeced genres\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nggplot(top_genres[1:10, ], aes(x = reorder(genre, n), y = n)) +\n  geom_col(fill = \"darkgreen\") +\n  coord_flip() +\n  labs(title = \"Top Genres Influenced by Oceanus Folk\",\n       x = \"Genre\", y = \"Number of Influenced Nodes\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-27-1.png)\n:::\n:::\n\n\n\n## c. On the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\n### Find all Oceanus Folk Node\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_nodes <- nodes_tbl %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\"),\n         `Node Type` %in% c(\"Song\", \"Album\")) \n```\n:::\n\n\n\n### Extract and analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_with_year <- oceanus_nodes %>%\n  filter(!is.na(release_date) | !is.na(written_date)) %>%\n  mutate(year = as.integer(substr(coalesce(release_date, written_date), 1, 4))) %>%\n  filter(!is.na(year))\n```\n:::\n\n\n\n### Get the Frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyr)\n\ngenre_by_year <- oceanus_with_year %>%\n  separate_rows(genre, sep = \",\\\\s*\") %>%\n  count(year, genre) %>%\n  arrange(year, desc(n))\n```\n:::\n\n\n\n### Visualisation\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(genre_by_year, aes(x = year, y = n, fill = genre)) +\n  geom_area(alpha = 0.7) +\n  labs(title = \"Evolution of Oceanus Folk and Related Genres\",\n       x = \"Year\", y = \"Number of Works\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-docx/unnamed-chunk-31-1.png)\n:::\n:::\n\n\n\n### Filter Oceanus Folk Aritst\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\noceanus_ids <- nodes_tbl %>%\n  filter(str_detect(tolower(genre), \"oceanus folk\")) %>%\n  pull(id)\n\nfolk_artists <- edges_tbl %>%\n  filter(target %in% oceanus_ids,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %>%\n  pull(source) %>%\n  unique()\n\ncandidate_artists <- nodes_tbl %>%\n  filter(id %in% folk_artists, `Node Type` == \"Person\", name != \"Sailor Shift\")\n```\n:::\n\n\n\n### To predict the potential artists, should find some specific characteristics\n\n1.  Check the amount of works\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nartist_activity <- edges_tbl %>%\n  filter(source %in% candidate_artists$id,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %>%\n  count(source, name = \"num_works\")\n```\n:::\n\n\n\n2.  Check if collaborate with Celebrates\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsailor_id <- nodes_tbl %>% filter(name == \"Sailor Shift\") %>% pull(id)\n\n\nsailor_works <- edges_tbl %>%\n  filter(source == sailor_id,\n         `Edge Type` %in% c(\"PerformerOf\", \"ComposerOf\", \"LyricistOf\", \"ProducerOf\")) %>%\n  pull(target)\n\n\ncollab_with_sailor <- edges_tbl %>%\n  filter(target %in% sailor_works,\n         source %in% candidate_artists$id) %>%\n  distinct(source) %>%\n  mutate(collab_sailor = 1)\n```\n:::\n\n\n\n3.  What are the influence\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nartist_influenced <- edges_tbl %>%\n  filter(`Edge Type` %in% c(\"InStyleOf\", \"CoverOf\", \"DirectlySamples\"),\n         target %in% edges_tbl$target[edges_tbl$source %in% candidate_artists$id]) %>%\n  count(source, name = \"num_influenced\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncandidates <- candidate_artists %>%\n  left_join(artist_activity, by = c(\"id\" = \"source\")) %>%\n  left_join(artist_influenced, by = c(\"id\" = \"source\")) %>%\n  left_join(collab_with_sailor, by = c(\"id\" = \"source\")) %>%\n  mutate(across(c(num_works, num_influenced, collab_sailor), ~replace_na(., 0))) %>%\n  mutate(score = num_works + num_influenced * 2 + collab_sailor * 3)\n```\n:::\n\n\n\nPredictions base on the result\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntop_candidates <- candidates %>%\n  arrange(desc(score)) %>%\n  select(name, num_works, num_influenced, collab_sailor, score) %>%\n  slice(1:3)\ntop_candidates\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  name          num_works num_influenced collab_sailor score\n  <chr>             <int>          <int>         <dbl> <dbl>\n1 Yang Wan             30              0             0    30\n2 Rüdiger Graf         18              0             0    18\n3 Filippo Pelli        17              0             0    17\n```\n\n\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}